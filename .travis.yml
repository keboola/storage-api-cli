language: php
matrix:
  include:
    - php: 5.6
      before_script:
        - curl -LSs http://box-project.github.io/box2/installer.php | php
        - composer install --prefer-source --dev --no-interaction

      script:
        - ./vendor/bin/phpcs --standard=psr2 --ignore=vendor -n .
        - php tests/loadToS3.php
        - php vendor/bin/phpunit --testsuite storage-api-cli
        - php ./box.phar build
        - php ./sapi-client.phar

      # prepare phars for deployment        
      after_success:
        - CURRENT_TAG=`git describe --tags HEAD`
        - echo $CURRENT_TAG
        - mkdir builds
        - cp ./sapi-client.phar ./builds/sapi-client.$CURRENT_TAG.phar
        - cp ./sapi-client.phar ./builds/sapi-client.phar

      # deployment is done on lowest supported version
      deploy:
        - provider: s3
          bucket: keboola-storage-api-cli
          local-dir: builds
          upload-dir: builds
          acl: public_read
          skip_cleanup: true
          detect_encoding: true
          access_key_id: "$AWS_ACCESS_KEY_ID"
          secret_access_key: "$AWS_SECRET_KEY"
          on:
            tags: true

    - php: 7.0
      before_script:
        - curl -LSs http://box-project.github.io/box2/installer.php | php
        - composer install --prefer-source --dev --no-interaction

      script:
        - ./vendor/bin/phpcs --standard=psr2 --ignore=vendor -n .
        - php tests/loadToS3.php
        - php vendor/bin/phpunit --testsuite storage-api-cli
        - php ./box.phar build
        - php ./sapi-client.phar

    - php: 7.1
      before_script:
        - curl -LSs http://box-project.github.io/box2/installer.php | php
        - composer install --prefer-source --dev --no-interaction

      script:
        - ./vendor/bin/phpcs --standard=psr2 --ignore=vendor -n .
        - php tests/loadToS3.php
        - php vendor/bin/phpunit --testsuite storage-api-cli
        - php ./box.phar build
        - php ./sapi-client.phar

    # abuse php:nightly to test and deploy docker image
    - php: nightly
      services:
        - docker
      script:
        - docker-compose run --rm tests
        - docker-compose build app
      after_success:
        - docker images
      deploy:
      - provider: script
        skip_cleanup: true
        script: ./deploy.sh
        on:
          tags: true
